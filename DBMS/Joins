--Table Joins
--------------
--Join the publishers and pub_info and show the publisher name and the first 40 characters of the pr_info information.
select pub_name
	,pr_info::char(40) 
from publishers p
inner join pub_info pi2 
	on pi2.pub_id = p.pub_id;

select * from pubs2;


--Join the publishers and titles tables to show all titles published by each publisher. Display the pub_id, pub_name and 
--and title_id.
select title, pub_name 
	,title_id 
	,t.pub_id
from titles t 
inner join publishers p 
	on t.pub_id = p.pub_id; 


--For each title_id in the table titles, rollup the corresponding qty in sales and show: title_id, title, ord_num and 
--the rolled-up value as a column aggregate called Total Sold

--select 
--	t.title_id
--	,t.title
--	,s.ord_num
--	,s.qty
--	aggregate (s.qty) as "Total Sold"
--from titles t 
--inner join sales s 
--	on t.title_id = s.title_id
--group by rollup(t.title_id, t.title_id, s.ord_num, s.qty);


select *
from sales
order by qty asc;

--For each stor_id in stores, show the corresponding ord_num in sales and the discount type from table discounts. 
--The output should consist of three columns: ord_num, discount and discounttype and should be sorted on ord_num
select s.stor_id 
	,s2.ord_num
	,d.discount 
	,d.discounttype
from stores s 
full join sales s2
	on s.stor_id = s2.stor_id
inner join discounts d 
	on d.stor_id = s.stor_id 
order by s2.ord_num asc;


--Show au_lname from authors, and pub_name from publishers when both publisher and author live in the same city.
select a.au_lname
	,a.city
	,p.city
	,p.pub_name
from authors a 
inner join titleauthor t 
	on a.au_id = t.au_id
inner join titles t2 
	on t2.title_id = t.title_id
inner join publishers p 
	on p.pub_id = t2.pub_id
where a.city = p.city;
	
--Refine 5 so that for each author you show all publishers who live in the same city and have published one of the authors titles.
--select a.au_lname
--	,a.city
--	,p.city
--	,p.pub_name
--from authors a 
--inner join titleauthor t 
--	on a.au_id = t.au_id
--inner join titles t2 
--	on t2.title_id = t.title_id
--inner join publishers p 
--	on p.pub_id = t2.pub_id;

--Refine 1 so that an outer join is performed. All of the publishers from the first table should be shown, 
--not just those with pr_info information in pub_info. You should use the ANSI SQL92 syntax.
select pub_name
	,pr_info::char(40) 
from publishers p
full join pub_info pi2 
	on pi2.pub_id = p.pub_id;


--List each publisher's name, the title of each book they have sold and the total quantity of that title.
select p.pub_name
	, t.title
	, s.qty
from publishers p
full join titles t 
	on t.pub_id = p.pub_id
full join sales s 
	on s.title_id = t.title_id;




--Business Queries
-------------------
--How many books have been published by each publisher?


--How many different types of book has each publisher published?


--What is the average royalty percentage payed to each author?


--For each store list which authors have had their books sold through that store.



